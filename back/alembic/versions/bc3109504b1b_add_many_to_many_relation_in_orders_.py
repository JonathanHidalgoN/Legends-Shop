"""Add many to many relation in orders table

Revision ID: bc3109504b1b
Revises: 0f6b8d54c941
Create Date: 2025-03-01 16:07:00.456115

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "bc3109504b1b"
down_revision: Union[str, None] = "0f6b8d54c941"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "order_item_association",
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["item_table.id"],
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["order_table.id"],
        ),
        sa.PrimaryKeyConstraint("order_id", "item_id"),
    )
    op.drop_constraint("order_table_item_id_fkey", "order_table", type_="foreignkey")
    op.drop_column("order_table", "item_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "order_table",
        sa.Column("item_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        "order_table_item_id_fkey", "order_table", "item_table", ["item_id"], ["id"]
    )
    op.drop_table("order_item_association")
    # ### end Alembic commands ###
