services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    volumes:
      - ./back:/docker_back
    ports:
      - "${BACKEND_PORT}:8000"
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLIENT_DOMAIN: ${NEXT_PUBLIC_CLIENT_DOMAIN}
        NEXT_PUBLIC_SERVER_DOMAIN: ${NEXT_PUBLIC_SERVER_DOMAIN}
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./front:/app

  # loki:
  #   image: grafana/loki:latest
  #   ports:
  #     - "${LOKI_PORT}:3100"
  #   command: -config.file=/etc/loki/local-config.yaml
  #
  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "${GRAFANA_PORT}:3000"
  #   volumes:
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
  #   depends_on:
  #     - db
  #
  # prometheus:
  #     image: prom/prometheus:latest
  #     ports:
  #       - "${PROMETEUS_PORT}:9090"
  #     volumes:
  #       - ./grafana/prometheus.yml:/etc/prometheus/prometheus.yml
  #     depends_on:
  #       - backend

volumes:
  postgres_data:
  # grafana_data:
  # prometheus_data:
